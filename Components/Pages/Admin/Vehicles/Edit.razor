@using Microsoft.AspNetCore.Authorization
@using CSE325_team.Data

@page "/admin/vehicles/edit/{Id:int}"
@attribute [Authorize(Roles = "Admin")]
@inject ApplicationDbContext Db
@inject NavigationManager Nav

<h3>Edit Vehicle</h3>

@if (vehicle is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@vehicle" OnValidSubmit="HandleValidSubmit" FormName="VehicleEditForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
        <label>Make:</label>
        <InputText class="form-control" @bind-Value="vehicle.Make" />
    </div>

    <div class="mb-3">
        <label>Model:</label>
        <InputText class="form-control" @bind-Value="vehicle.Model" />
    </div>

    <div class="mb-3">
        <label>Color:</label>
        <InputText class="form-control" @bind-Value="vehicle.Color" />
    </div>

    <div class="mb-3">
        <label>Vehicle Type:</label>
        <InputText class="form-control" @bind-Value="vehicle.VehicleType" />
    </div>

    <div class="mb-3">
        <label>Transmission:</label>
        <InputText class="form-control" @bind-Value="vehicle.Transmission" />
    </div>

    <div class="mb-3">
        <label>Seats:</label>
        <InputNumber class="form-control" @bind-Value="vehicle.Seats" />
    </div>

    <div class="mb-3">
        <label>Year:</label>
        <InputNumber class="form-control" @bind-Value="vehicle.Year" />
    </div>

    <div class="mb-3">
        <label>Daily Rate ($):</label>
        <InputNumber class="form-control" @bind-Value="vehicle.DailyRate" />
    </div>

    <div class="mb-3">
        <label>Status:</label>
        <InputText class="form-control" @bind-Value="vehicle.Status" />
    </div>

        <button class="btn btn-success" type="submit">Save</button>
        <NavLink class="btn btn-secondary" href="/admin/vehicles">Cancel</NavLink>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }
    private Vehicle? vehicle;

    protected override async Task OnInitializedAsync()
    {
        vehicle = await Db.Vehicle.FindAsync(Id);
    }

    private async Task HandleValidSubmit()
    {
        Db.Vehicle.Update(vehicle!);
        await Db.SaveChangesAsync();
        Nav.NavigateTo("/admin/vehicles");
    }
}
